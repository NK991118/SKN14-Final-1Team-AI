<!-- 회사: 코드노바 | 대상: 사원(프론트엔드) | 작성일: 2025-08-29 -->
# 빌드/배포 가이드
분류: frontend | 회사: 코드노바 | 버전: v1.0 | 작성일: 2025-08-29

---

## 1. 빌드 준비

### 1.1 환경 설정
- **Node.js 설치**: 최신 LTS 버전을 설치합니다.
- **패키지 매니저**: npm 또는 yarn을 설치합니다.

### 1.2 프로젝트 클론
- GitHub에서 프로젝트를 클론합니다.
- `git clone [레포지토리 URL]` 명령어를 사용합니다.

### 1.3 의존성 설치
- 프로젝트 디렉토리로 이동 후, 의존성을 설치합니다.
- `npm install` 또는 `yarn install` 명령어를 실행합니다.

## 2. 빌드 프로세스

### 2.1 빌드 명령어 실행
- 다음 명령어를 사용하여 빌드를 실행합니다.
- `npm run build` 또는 `yarn build` 명령어를 사용합니다.

### 2.2 빌드 결과 확인
- 빌드가 완료되면 `dist` 또는 `build` 폴더에 결과물이 생성됩니다.
- 생성된 파일을 확인하여 오류가 없는지 검토합니다.

## 3. 배포 준비

### 3.1 배포 환경 설정
- 배포할 서버에 접근합니다.
- 필요한 경우 SSH를 통해 서버에 접속합니다.

### 3.2 파일 전송
- 빌드된 파일을 서버에 전송합니다.
- `scp` 또는 FTP 클라이언트를 사용하여 전송합니다.

### 3.3 서버 설정
- 웹 서버(Nginx, Apache 등)의 설정 파일을 수정합니다.
- 필요한 경우 SSL 인증서 설정을 확인합니다.

## 4. 배포 실행

### 4.1 서비스 재시작
- 웹 서버를 재시작하여 변경 사항을 적용합니다.
- `sudo systemctl restart [웹 서버 이름]` 명령어를 사용합니다.

### 4.2 배포 확인
- 브라우저에서 배포된 URL을 열어 정상적으로 작동하는지 확인합니다.
- 콘솔 및 네트워크 탭을 통해 오류가 없는지 검토합니다.

## 5. 오류 처리

### 5.1 로그 확인
- 서버 로그를 확인하여 오류 메시지를 파악합니다.
- `/var/log/[웹 서버 이름]/error.log` 경로에서 로그를 확인합니다.

### 5.2 문제 해결
- 발생한 오류를 기반으로 문제를 해결합니다.
- 필요 시 팀원과 협력하여 이슈를 해결합니다.

## 6. 문서화
- 배포 과정에서 발생한 문제 및 해결 방법을 문서화합니다.
- 팀원들과 공유하여 향후 참고할 수 있도록 합니다.

---

### 다음 개정 제안
- 배포 자동화 도구에 대한 추가 정보를 포함할 수 있습니다.
- 각 단계에 대한 예시를 추가하여 이해를 돕는 것도 좋습니다.
