index,question,reference,system_answer,accuracy,recall,specificity
0,크랙(Crack) 앱의 주요 기능은 무엇인가요?,"크랙(Crack)은 AI 페르소나 챗봇 앱으로, 코드노바의 서비스 아키텍처에서 생성형 AI 글쓰기·이미지·요약 플랫폼과 함께 지원됩니다.","크랙(Crack) 앱의 주요 기능은 생성형 AI를 활용한 글쓰기, 이미지 생성, 요약 플랫폼을 제공하는 것입니다. 또한, AI 페르소나 챗봇 앱으로서 대화형 광고 제작 및 보상 플랫폼을 지원하는 기능도 포함되어 있습니다.",85,80,70
1,RabbitMQ의 역할은 무엇인가요?,RabbitMQ는 비동기 작업 처리를 위해 시스템 간 메시지를 전달하는 메시지 큐입니다.,"RabbitMQ는 메시지 큐로, 비동기 작업 처리를 위해 시스템 간 메시지를 전달하는 역할을 합니다. 주요 기능은 메시지 전송 성공률 확인과 큐의 길이 및 처리 속도 모니터링입니다.",90,95,85
2,프론트엔드 팀에서 JWT의 역할은 무엇인가요?,JWT(JSON Web Token)는 사용자 인증을 처리하는 데 사용됩니다.,프론트엔드 팀에서 JWT의 역할에 대한 구체적인 정보는 문서에서 찾을 수 없습니다. 잘 모르겠습니다. 추가적인 정보가 필요하시면 다른 질문을 해주시기 바랍니다.,0,0,0
3,"코드노바의 백엔드 서비스 아키텍처는 어떻게 설계되었고, 그 목적은 무엇인가요?","코드노바의 백엔드 서비스 아키텍처는 확장 가능하고 안정적인 서비스를 제공하기 위해 설계되었습니다. 각 구성 요소는 독립적으로 운영되며, 서로 긴밀하게 연결되어 있습니다. 지속적인 모니터링과 최적화를 통해 서비스의 품질을 유지하고 향상시킬 수 있습니다.","코드노바의 백엔드 서비스 아키텍처는 생성형 AI 글쓰기·이미지·요약 플랫폼, AI 페르소나 챗봇 앱인 크랙(Crack), 그리고 대화형 광고 제작·보상 플랫폼인 Wrtn Ads를 지원하도록 설계되었습니다. 주요 구성 요소로는 API 서버가 있으며, 이는 클라이언트와의 통신을 담당하고, 요청을 처리하여 적절한 응답을 반환합니다. API 서버는 Node.js와 Express.js 기술 스택을 사용합니다. 

백엔드 아키텍처의 목적은 이러한 서비스들을 안정적으로 지원하고, 요청 처리 속도와 오류율을 모니터링하여 서비스의 신뢰성을 높이는 데 있습니다.",70,60,50
4,MFA는 뭐하는거야?,MFA는 추가적인 보안 강화를 위해 도입되는 다중 인증 방법입니다.,"MFA는 다중 인증(Multi-Factor Authentication)의 약자로, 키 접근 시 추가 인증 절차를 요구하여 무단 접근의 위험을 줄이는 보안 기능입니다. 이는 키 유출 및 무단 접근 가능성을 최소화하기 위한 보완책으로 활용됩니다.",90,95,85
5,JWT는 API 접근 시 어떤 역할을 합니까?,"JWT(JSON Web Token)는 API 접근 시 인증을 위해 사용되며, 토큰은 유효 기간을 설정하고 만료된 토큰은 사용하지 못하도록 합니다.","JWT(JSON Web Token)는 API 접근 시 사용자의 인증을 처리하는 역할을 합니다. API 요청은 적절한 JWT 토큰을 포함해야 하며, 이 토큰은 사용자의 신분을 확인하고 권한을 부여하는 데 사용됩니다. 또한, JWT는 유효 기간을 설정하여 만료된 토큰은 사용할 수 없도록 하여 보안을 강화합니다.",95,100,90
6,코드노바의 백엔드 개발팀이 보안 및 인증을 관리하기 위한 기본 지침은 무엇입니까?,이 가이드는 코드노바의 백엔드 개발팀이 보안 및 인증을 효과적으로 관리하기 위한 기본 지침입니다. 모든 팀원은 이 가이드를 숙지하고 준수하여 안전한 시스템 운영에 기여해야 합니다.,"코드노바의 백엔드 개발팀이 보안 및 인증을 관리하기 위한 기본 지침은 다음과 같습니다:

1. **보안 기본 원칙**
   - 최소 권한 원칙: 사용자는 자신의 업무에 필요한 최소한의 권한만 부여받아야 하며, 정기적으로 권한을 검토하고 불필요한 권한은 즉시 회수합니다.
   - 데이터 암호화: 모든 민감 데이터는 저장 시 암호화하여 보호하고, 전송되는 데이터는 SSL/TLS 프로토콜을 사용하여 암호화합니다.
   - 정기적인 보안 점검: 보안 점검을 정기적으로 실시하여 취약점을 발견하고 수정하며, 외부 보안 전문가에 의한 감사도 고려합니다.

2. **사용자 인증**
   - 기본 인증 방식으로는 이메일과 비밀번호 조합을 사용합니다.
   - 추가적인 보안 강화를 위해 다중 인증(MFA)을 도입합니다.

3. **로그 관리**
   - 모든 인증 시도 및 API 호출에 대한 로그를 기록하며, 로그에는 사용자 ID, IP 주소, 요청 시간, 요청 내용 등을 포함합니다.
   - 정기적으로 로그를 분석하여 비정상적인 활동을 탐지하고, 이상 징후 발견 시 즉시 대응합니다.

4. **사고 대응**
   - 보안 사고 발생 시 대응 절차를 문서화하고, 사고 발생 시 즉시 관련 팀에 통보하여 피해를 최소화하기 위한 조치를 취합니다.

5. **교육 및 훈련**
   - 모든 팀원은 보안 교육을 정기적으로 이수해야 하며, 보안 사고 대응 훈련을 통해 실제 상황에 대비합니다.

이 지침을 숙지하고 준수하여 안전한 시스템 운영에 기여해야 합니다.",70,60,80
7,2025년 8월 29일에 작성된 코드노바의 에러 핸들링 매뉴얼에서 에러 핸들링의 중요성은 무엇으로 설명되고 있습니까?,"코드노바의 에러 핸들링 매뉴얼에서는 에러 핸들링이 안정적인 시스템 운영을 위해 필수적이라고 설명하고 있습니다. 또한, 사용자 경험을 저해하지 않도록 적절한 에러 메시지를 제공하고, 시스템의 신뢰성을 높이는 것이 목표라고 강조하고 있습니다.","2025년 8월 29일에 작성된 코드노바의 에러 핸들링 매뉴얼에서는 에러 핸들링의 중요성이 ""안정적인 시스템 운영을 위해 필수적""이라고 설명되고 있습니다. 주요 목표는 사용자 경험을 저해하지 않도록 적절한 에러 메시지를 제공하고, 시스템의 신뢰성을 높이는 것입니다.",95,95,90
8,v1.0 뭐에요?,"v1.0은 코드노바 백엔드팀의 배포 및 운영 가이드의 버전 번호로, 이 문서는 안정적이고 효율적인 서비스 제공을 목표로 합니다.","검색 결과에 따르면, v1.0은 문서의 초기 버전을 의미합니다. 구체적으로는 2025년 8월 29일에 최초 작성된 버전으로, 데이터/AI팀의 다양한 문서에서 사용되고 있습니다.",70,60,50
9,코드노바 백엔드팀이 배포 및 운영을 효율적으로 수행하기 위해 필요한 체크리스트 항목들은 무엇인가요?,"코드노바 백엔드팀이 배포 및 운영을 효율적으로 수행하기 위해 필요한 체크리스트 항목들은 다음과 같습니다: 코드 리뷰 완료, 모든 테스트 통과, 배포 환경 준비 완료, 환경 변수 설정 완료, 배포 실행 완료, 모니터링 설정 완료, 백업 진행, 보안 점검 완료.","코드노바 백엔드팀이 배포 및 운영을 효율적으로 수행하기 위해 필요한 체크리스트 항목은 다음과 같습니다:

1. 코드 리뷰 완료
2. 모든 테스트 통과
3. 배포 환경 준비 완료
4. 환경 변수 설정 완료
5. 배포 실행 완료
6. 모니터링 설정 완료
7. 백업 진행
8. 보안 점검 완료

이 항목들은 배포 및 운영 과정에서 중요한 단계를 포함하고 있으며, 필요에 따라 지속적으로 업데이트하고 개선해야 합니다.",100,100,100
10,챗봇 대화는 뭐 저장해?,챗봇 대화는 챗봇과의 대화 기록을 저장합니다.,"챗봇 대화는 데이터베이스의 ""챗"" 테이블에 저장됩니다. 이 테이블은 다음과 같은 필드를 포함합니다:

- **chat_id**: 대화의 고유 ID
- **user_id**: 사용자의 ID (사용자 테이블과 연결)
- **message**: 대화 내용
- **created_at**: 대화가 생성된 일자

이와 같이 챗봇 대화 기록은 데이터베이스에서 관리됩니다.",70,70,90
11,2025-08-01에 기록된 변경 사항은 무엇입니까?,2025-08-01에 기록된 변경 사항은 사용자 테이블에 'last_login' 필드를 추가한 것입니다. 이 변경은 홍길동에 의해 수행되었습니다.,2025-08-01에 기록된 변경 사항은 사용자 테이블에 'last_login' 필드 추가입니다. 해당 변경 사항은 홍길동이 작성한 것입니다.,95,100,95
